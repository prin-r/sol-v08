import brownie


def test_bridge_relayoraclestate_success(simplebridge):
    simplebridge.relayOracleState(
        "191",
        [
            "0x685430546D23A44E6B8034EAAFBC2F4CD7FEF54B54D5B66528CB4E5225BD74FB",  # accToGovStoresMerkleHash
            "0x4F8D0BB0CD3EB9DC70B4DBBEA5F0CBD5B523195F7BAE02BB401BB00A93ABA08E",  # mainAndMintStoresMerkleHash
            "0x1912057FFF0B3E85ABF1A319F75D37B21B430F3DA7DB9E486A5041DE47C686D3",  # oracleIAVLStateHash
            "0xB1F2FD852E790E735CA2D3014F96A2A53C60393E9C6BBF941B9A6DD6A05CF6F9",  # paramsStoresMerkleHash
            "0x91CC906286235B676AD402FC04ED768EB2BFECA664E8D595C286571DA1433C60",  # slashingToUpgradeStoresMerkleHash
        ],
        [
            "0x32FA694879095840619F5E49380612BD296FF7E950EAFB66FF654D99CA70869E",  # versionAndChainIdHash
            "0xD9F175396C0E2D0E77F69856ABF5D8E69283CB915EB8886262FEDA1D519B3005",  # timeHash
            "0x4F4D548668A3986DB253689234B9CAC96303A128B7081B16E53B79AB9E65B887",  # lastBlockIDAndOther
            "0x004209A161040AB1778E2F2C00EE482F205B28EFBA439FCB04EA283F619478D9",  # nextValidatorHashAndConsensusHash
            "0x6E340B9CFFB37A989CA544E6BB780A2C78901D3FB33738768511A30617AFA01D",  # lastResultsHash
            "0xD991DA4D4E69473CC75A4B819F9E07D4956671A6F4A74DF4CC16596FCBE68137",  # evidenceAndProposerHash
        ],
        [
            [
                "0x9279257914BFEE6FAEC46DF086E9A673A4C1576FB299094D45F77E12FA3728E7",  # r
                "0x04DBF23F5EBB07BA8FD7CA06843DFE363B5E86596930E1889D9BD5BD3E98FC53",  # s
                28,  # v
                "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510979FBD9801320962616E64636861696E",  # signedDataSuffix
            ],
            [
                "0x826BB17B714EBCD8199EE2A01334102F19248087CFDEEE42EBD406B3991C3895",  # r
                "0x621281EEDF97F3A9EC121224CEF9F8C07872D2C81CCE44DD846BB3678DD50523",  # s
                27,  # v
                "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510DD89E98A01320962616E64636861696E",  # signedDataSuffix
            ],
            [
                "0xD775FD0E1580499EF16A4AB1998DCB4CBD47CF6F342CDC51A9552D1434552ED8",  # r
                "0x5A1A2075AE97A6BBD07A5A40EFE287ECEAB37C7A7CAAE82E6C997C51C6233470",  # s
                27,  # v
                "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510AB94A59201320962616E64636861696E",  # signedDataSuffix
            ],
        ],
    )


def test_bridge_relayoraclestate_insufficient_validator(simplebridge):
    with brownie.reverts("INSUFFICIENT_VALIDATOR_SIGNATURES"):
        tx = simplebridge.relayOracleState(
            "191",
            [
                "0x685430546D23A44E6B8034EAAFBC2F4CD7FEF54B54D5B66528CB4E5225BD74FB",  # accToGovStoresMerkleHash
                "0x4F8D0BB0CD3EB9DC70B4DBBEA5F0CBD5B523195F7BAE02BB401BB00A93ABA08E",  # mainAndMintStoresMerkleHash
                "0x1912057FFF0B3E85ABF1A319F75D37B21B430F3DA7DB9E486A5041DE47C686D3",  # oracleIAVLStateHash
                "0xB1F2FD852E790E735CA2D3014F96A2A53C60393E9C6BBF941B9A6DD6A05CF6F9",  # paramsStoresMerkleHash
                "0x91CC906286235B676AD402FC04ED768EB2BFECA664E8D595C286571DA1433C60",  # slashingToUpgradeStoresMerkleHash
            ],
            [
                "0x32FA694879095840619F5E49380612BD296FF7E950EAFB66FF654D99CA70869E",  # versionAndChainIdHash
                "0xD9F175396C0E2D0E77F69856ABF5D8E69283CB915EB8886262FEDA1D519B3005",  # timeHash
                "0x4F4D548668A3986DB253689234B9CAC96303A128B7081B16E53B79AB9E65B887",  # lastBlockIDAndOther
                "0x004209A161040AB1778E2F2C00EE482F205B28EFBA439FCB04EA283F619478D9",  # nextValidatorHashAndConsensusHash
                "0x6E340B9CFFB37A989CA544E6BB780A2C78901D3FB33738768511A30617AFA01D",  # lastResultsHash
                "0xD991DA4D4E69473CC75A4B819F9E07D4956671A6F4A74DF4CC16596FCBE68137",  # evidenceAndProposerHash
            ],
            [
                [
                    "0x9279257914BFEE6FAEC46DF086E9A673A4C1576FB299094D45F77E12FA3728E7",  # r
                    "0x04DBF23F5EBB07BA8FD7CA06843DFE363B5E86596930E1889D9BD5BD3E98FC53",  # s
                    28,  # v
                    "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                    "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510979FBD9801320962616E64636861696E",  # signedDataSuffix
                ],
                [
                    "0xD775FD0E1580499EF16A4AB1998DCB4CBD47CF6F342CDC51A9552D1434552ED8",  # r
                    "0x5A1A2075AE97A6BBD07A5A40EFE287ECEAB37C7A7CAAE82E6C997C51C6233470",  # s
                    27,  # v
                    "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                    "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510AB94A59201320962616E64636861696E",  # signedDataSuffix
                ],
            ],
        )
        assert tx.status == 0


def test_bridge_relayoraclestate_invalid_signature_order(simplebridge):
    with brownie.reverts("INVALID_SIGNATURE_SIGNER_ORDER"):
        tx = simplebridge.relayOracleState(
            "191",
            [
                "0x685430546D23A44E6B8034EAAFBC2F4CD7FEF54B54D5B66528CB4E5225BD74FB",  # accToGovStoresMerkleHash
                "0x4F8D0BB0CD3EB9DC70B4DBBEA5F0CBD5B523195F7BAE02BB401BB00A93ABA08E",  # mainAndMintStoresMerkleHash
                "0x1912057FFF0B3E85ABF1A319F75D37B21B430F3DA7DB9E486A5041DE47C686D3",  # oracleIAVLStateHash
                "0xB1F2FD852E790E735CA2D3014F96A2A53C60393E9C6BBF941B9A6DD6A05CF6F9",  # paramsStoresMerkleHash
                "0x91CC906286235B676AD402FC04ED768EB2BFECA664E8D595C286571DA1433C60",  # slashingToUpgradeStoresMerkleHash
            ],
            [
                "0x32FA694879095840619F5E49380612BD296FF7E950EAFB66FF654D99CA70869E",  # versionAndChainIdHash
                "0xD9F175396C0E2D0E77F69856ABF5D8E69283CB915EB8886262FEDA1D519B3005",  # timeHash
                "0x4F4D548668A3986DB253689234B9CAC96303A128B7081B16E53B79AB9E65B887",  # lastBlockIDAndOther
                "0x004209A161040AB1778E2F2C00EE482F205B28EFBA439FCB04EA283F619478D9",  # nextValidatorHashAndConsensusHash
                "0x6E340B9CFFB37A989CA544E6BB780A2C78901D3FB33738768511A30617AFA01D",  # lastResultsHash
                "0xD991DA4D4E69473CC75A4B819F9E07D4956671A6F4A74DF4CC16596FCBE68137",  # evidenceAndProposerHash
            ],
            [
                [
                    "0x9279257914BFEE6FAEC46DF086E9A673A4C1576FB299094D45F77E12FA3728E7",  # r
                    "0x04DBF23F5EBB07BA8FD7CA06843DFE363B5E86596930E1889D9BD5BD3E98FC53",  # s
                    28,  # v
                    "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                    "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510979FBD9801320962616E64636861696E",  # signedDataSuffix
                ],
                [
                    "0xD775FD0E1580499EF16A4AB1998DCB4CBD47CF6F342CDC51A9552D1434552ED8",  # r
                    "0x5A1A2075AE97A6BBD07A5A40EFE287ECEAB37C7A7CAAE82E6C997C51C6233470",  # s
                    27,  # v
                    "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                    "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510AB94A59201320962616E64636861696E",  # signedDataSuffix
                ],
                [
                    "0x826BB17B714EBCD8199EE2A01334102F19248087CFDEEE42EBD406B3991C3895",  # r
                    "0x621281EEDF97F3A9EC121224CEF9F8C07872D2C81CCE44DD846BB3678DD50523",  # s
                    27,  # v
                    "0x6E080211BF0000000000000022480A20",  # _signedDataPrefix
                    "0x12240A2066424E8F0417945A71067A55B7121282A90524E3C0709D8F8ADDB6ADC8FD46D110012A0C08E6E9C6F70510DD89E98A01320962616E64636861696E",  # signedDataSuffix
                ],
            ],
        )
        assert tx.status == 0
